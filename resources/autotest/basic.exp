#!/usr/bin/expect

log_file ./autotest.log
set timeout 180
send_log "\nConnecting to bitscout serial socket..\n"

send "Please let the system boot..\n// "
spawn socat - UNIX-CONNECT:./bitscout.serial.sock
set socatpid [exp_pid]

if { $socatpid > 0 } {
  send_log "autotest: Bitscout serial port socket was opened. QEMU serial port: OK"
} else {
  send_log "\nautotest: CRITICAL, failed to connect to bitscout serial port socket. QEMU serial port: ERROR"
  exit
}

send_log "\nBooting the system..\n"
expect {
  "bitscout-host login:" { send_log "\nautotest: Login prompt found. System boot: OK\n"; }
  timeout { send_log "\nautotest: Timeout expired while waiting for login prompt. System boot: ERROR\n"; exit }
}
set timeout 180
send "user\n"
expect -re {^.*user.*@.*bitscout-host.*\$ }

send_log "Becoming root..\n"
send "sudo -i\n"
expect -re {^.*root.*@.*bitscout-host.*\$ }

#1. Test container status
send_log "\nChecking if the container is running..\n"
set container_started 0
while { $container_started == 0 } {
 send "machinectl show container\n"
 expect {
   "State=running" { expect "\n"; send_log "autotest: Container is up. Container check: OK\n"; set container_started 1; break }
   -re {^.*root.*@bitscout-host.*\$ } { send_log "\nContainer has not started yet. Waiting..\n"; sleep 3 }
   timeout { send_log "autotest: CRITICAL, timeout waiting for container. Container check: ERROR"; exit }
 }
}

#2. Test services status: openvpn, ssh, privexecd, historian, ...
send_log "Checking host system services status..\n"
#check openvpn-client@scout.service
send "systemctl --no-pager status openvpn-client@scout.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active:*failed" { expect "\n"; send_log "\nautotest: OpenVPN service is not running. OpenVPN: ERROR\n"; }
  "Unit openvpn*@scout.service could not be found." { expect "\n"; send_log "\nautotest: OpenVPN service is not installed. OpenVPN: ERROR\n"; }
  "Active:*active (running)" { expect "\n"; send_log "\nautotest: OpenVPN service is running. OpenVPN: OK\n"; }
}
expect "root*bitscout-host*\$ "

#check privexec.service
send "systemctl --no-pager status privexec.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active:*failed" { expect "\n"; send_log "\nautotest: PrivExec service is not running. PrivExec: ERROR\n"; }
  "Active:*active (running)" { expect "\n"; send_log "\nautotest: PrivExec service is running. PrivExec: OK\n"; }
}
expect "root*bitscout-host*\$ "

#check historian.service
send "systemctl --no-pager status historian.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active:*failed" { expect "\n"; send_log "\nautotest: Historian service is not running. Hostorian: ERROR\n"; }
  "Active:*active (running)" { expect "\n"; send_log "\nautotest: Historian service is running. Historian: OK\n"; }
}
expect "root*bitscout-host*\$ "

set timeout 180
set container_loaded 0
while { $container_loaded == 0 } {
  send "systemctl show systemd-nspawn@container.service --no-pager -p StatusText \n"
  expect {
    -re {StatusText=Container running: Startup finished in.*} { expect "$ "; send_log "\n autotest: Container is booted\n"; set container_loaded 1; break; }
    -re {StatusText=Container running\.\r.*} { expect "$ "; sleep 5; send "systemctl show systemd-nspawn@container.service --no-pager -p StatusText \n"; }
    -re {StatusText=\r.*} { expect "$ "; sleep 5; send "systemctl show systemd-nspawn@container.service --no-pager -p StatusText \n"; }
    timeout { send_log "\n autotest: CRITICAL, timeout waiting for container to boot.\n"; exit; }
  }
}

#check guest services
send_log "Checking guest system services status..\n"
#interact

set timeout 180
#entering the guest container
send "machinectl shell container /bin/bash\n"
expect { 
  -re {^.*root.*@.*bitscout[^-].*\$ } { send_log "\nautotest: Guest container shell is available. Container shell: OK\n"; }
  timeout { send_log "\nautotest: CRITICAL, couldn't enter the container shell. Container shell: ERROR\n"; exit; } 
}

#check ssh.service
send "systemctl --no-pager status ssh.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active: failed" { expect "\n"; send_log "\nautotest: Container's ssh service is not running. Container SSH: ERROR\n"; }
  "Active: active (running)" { expect "\n"; send_log "\nautotest: Container's ssh service is running. Container SSH: OK\n"; }
  -re "Active: inactive|Active: activating" { expect "root*bitscout*\$ "; sleep 1; send "systemctl --no-pager status ssh.service | tr -cd '\\11\\12\\15\\40-\\176' \n"; exp_continue; }
  timeout { send_log "\nautotest: SSH server is not running in the container. Container SSH: ERROR\n"; exit }
}
expect "root*bitscout*\$ "

#The following is optional, uncomment the next line if you want to do manual checks
#interact

#exiting and shutting down the system
send "exit\n"
expect "root*@*bitscout*\$ "
send "poweroff -f\n\n"

expect {
  "Powering off." { send_log "\nautotest: Test graceful exit: OK\n" }
  timeout { send_log "\nautotest: Test graceful exit: ERROR\n" }
}

